#!/command/with-contenv bash
# shellcheck shell=bash

# FREQUENCIES needs to be set

if [[ -z "${FREQUENCIES}" ]]; then
	echo "FREQUENCIES is not set, exiting"
	exit 1
fi

if [[ -z "$SOAPYSAMPLERATE" ]]; then
	echo "SOAPYSAMPLERATE is not set, exiting"
	exit 1
fi

IFS=';'
read -ra SPLIT_FREQS <<< "${FREQUENCIES}"

# loop through SPLIT_FREQS

FREQ_STRING=""
for i in "${SPLIT_FREQS[@]}"
do
	# [[ "$i" == *"."* ]] && j="${i/./}000" || j="$i" # convert xxx.xxx (MHz) into Hertz yyyyyy000 if needed
	# if [[ $(echo "$j > 118000000" | bc)  -eq 0 || $(echo "$j < 137000000" | bc) -eq 0 ]]; then
	# 	echo "warning: FREQUENCY $i is not in the range of 118000000 - 137000000 or 118.0 - 137.0"
	# fi
	FREQ_STRING+="$i "
done

# Make sure mode is valid

if [[ -n "${SERVER}" && -z "${SERVER_PORT}" ]]; then
	echo "SERVER is set but SERVER_PORT is not set, exiting"
	exit 1
fi

if [[ -n "$ZMQ_MODE" ]]; then
  if [[ -z "$ZMQ_ENDPOINT" ]]; then
	echo "ZMQ_MODE mode set to '${ZMQ_MODE}, but ZMQ_ENDPOINT is not set, exiting"
	exit 1
  fi
fi

if [[ -n "$ZMQ_ENDPOINT" ]]; then
  if [[ -z "$ZMQ_MODE" ]]; then
    echo "ZMQ_ENDPOINT mode set to '${ZMQ_ENDPOINT}, but ZMQ_MODE is not set, exiting"
	exit 1
  fi
fi

# we need the driver for sure
if [[ -n "${SOAPYSDRDRIVER}" ]]; then
	if [[ -n "${SOAPYSDRSERIAL}" ]]; then
		echo "[WARN] No SOAPYSDRSERIAL is set. If you have more than one SDR plugged in the system may grab the wrong one!"
	fi
else
	echo "SOAPYSDRDRIVER is not set, exiting"
	exit 1
fi

mkdir -p /run/hfdl
touch /run/hfdl/hfdlpast5min.json

sed -i "s/FREQ_STRING=\"\"/FREQ_STRING=\"$FREQ_STRING\"/g" /etc/s6-overlay/scripts/dumphfdl

# Everything is good to go. Exit with 0

exit 0
