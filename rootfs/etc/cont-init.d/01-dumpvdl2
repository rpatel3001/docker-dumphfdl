#!/usr/bin/with-contenv bash
# shellcheck shell=bash

# FEED_ID needs to be set

if [[ -z "${FEED_ID}" ]]; then
	echo "FEED_ID is not set, exiting"
	exit 1
fi

# FREQUENCIES needs to be set

if [[ -z "${FREQUENCIES}" ]]; then
	echo "FREQUENCIES is not set, exiting"
	exit 1
fi

IFS=';'
read -ra SPLIT_FREQS <<< "${FREQUENCIES}"

# loop through SPLIT_FREQS

# We can only have 8 total frequencies

if [[ "${#SPLIT_FREQS[@]}" -gt 8 ]]; then
	echo "FREQUENCIES may not contain more than 8 frequencies, exiting"
	exit 1
fi

# FREQUENCIES needs to be in the range of 118000000 (118 MHz) - 137000000 (137 MHz).
# Acceptable format is either in Hz (dumpvdl2 default) or in MHz (as with acarsdec)

FREQ_STRING=""
for i in "${SPLIT_FREQS[@]}"
do
	[[ "$i" == *"."* ]] && j="${i/./}000" || j="$i" # convert xxx.xxx (MHz) into Hertz yyyyyy000 if needed
	if [[ $(echo "$j > 118000000" | bc)  -eq 0 || $(echo "$j < 137000000" | bc) -eq 0 ]]; then
		echo "FREQUENCY $i is not in the range of 118000000 - 137000000 or 118.0 - 137.0, exiting"
		exit 1
	fi
	FREQ_STRING+="$j "
done

# Make sure mode is valid

if [[ -n "${SERVER}" && -z "${SERVER_PORT}" ]]; then
	echo "SERVER is set but SERVER_PORT is not set, exiting"
	exit 1
fi

# DEVICE_ID or SERIAL needs to be set

if [[ -z "${SERIAL}" ]]; then
	echo "SERIAL is not set, exiting"
	exit 1
fi

if [[ -n "$ZMQ_MODE" ]]; then
  if [[ -z "$ZMQ_ENDPOINT" ]]; then
	echo "ZMQ_MODE mode set to '${ZMQ_MODE}, but ZMQ_ENDPOINT is not set, exiting"
	exit 1
  fi
fi

if [[ -n "$ZMQ_ENDPOINT" ]]; then
  if [[ -z "$ZMQ_MODE" ]]; then
    echo "ZMQ_ENDPOINT mode set to '${ZMQ_ENDPOINT}, but ZMQ_MODE is not set, exiting"
	exit 1
  fi
fi

mapfile -t RTL_TEST_OUTPUT < <(timeout 1s rtl_test -d 0 2>&1 | grep -P '^\s+\d+:\s.*?,.*?,\s+SN:\s+.*?$' | IFS=$'\n' sed -n 's/^\s*\([^:]*\):[^,]*,[^,]*,\s*SN:\s*\(.*\)$/\1,\2/; s/\s*$//p' || true)  
for RTL_TEST_OUTPUT_LINE in "${RTL_TEST_OUTPUT[@]}"; do
        if [[ "${RTL_TEST_OUTPUT_LINE##*,}" == "$SERIAL" ]]; then
                OUTPUT_DEVICE_ID="${RTL_TEST_OUTPUT_LINE%%,*}"
        fi
done

if [[ -z "${OUTPUT_DEVICE_ID}" ]]; then
        echo "Could not find Device ID for serial '$SERIAL'"
        exit 1
fi

rm -rf /etc/services.d/dumpvdl2/run > /dev/null 2>&1
if [[ -n "${OUTPUT_DEVICE_ID}" ]]; then
	cp /etc/templates/run /etc/services.d/dumpvdl2/run
else
	cp /etc/templates/bad /etc/services.d/dumpvdl2/run
fi

s6-chmod 0755 /etc/services.d/dumpvdl2/run

mkdir -p /run/acars
touch /run/acars/vdlm.past5min.json

sed -i "s/DEVICE_ID=\"\"/DEVICE_ID=\"$OUTPUT_DEVICE_ID\"/g" /etc/services.d/dumpvdl2/run
sed -i "s/FREQ_STRING=\"\"/FREQ_STRING=\"$FREQ_STRING\"/g" /etc/services.d/dumpvdl2/run

# Everything is good to go. Exit with 0

exit 0
